#pragma once
#include <rclcpp/node.hpp>
#include <rclcpp/subscription.hpp>
#include <rviz_2d_overlay_msgs/msg/detail/overlay_text__struct.hpp>
#include <rviz_2d_overlay_msgs/msg/overlay_text.hpp>
#include <sensor_msgs/msg/battery_state.hpp>
#include <sensor_msgs/msg/detail/battery_state__struct.hpp>

// auto-generated by generate_parameter_library
#include "battery_state_rviz_overlay/battery_state_rviz_overlay_parameters.hpp"

namespace battery_state_rviz_overlay
{
class BatteryStateDisplay : public rclcpp::Node
{
public:
  explicit BatteryStateDisplay(const std::string& name);

  inline void setParamListener(std::shared_ptr<ParamListener> param_listener) { param_listener_ = param_listener; }

private:
  std::shared_ptr<ParamListener> param_listener_;
  Params params_;

  rclcpp::Publisher<rviz_2d_overlay_msgs::msg::OverlayText>::SharedPtr overlayPublisher_;

  rclcpp::Subscription<sensor_msgs::msg::BatteryState>::SharedPtr batteryStateSubscription_;

  void batteryStateCallback(const sensor_msgs::msg::BatteryState& message);

  std::vector<double> getRgba();
};
}  // namespace battery_state_rviz_overlay
